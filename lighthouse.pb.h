/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Wed Mar  8 21:59:49 2017. */

#ifndef PB_DARKROOMPROTOBUF_LIGHTHOUSE_PB_H_INCLUDED
#define PB_DARKROOMPROTOBUF_LIGHTHOUSE_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _DarkRoomProtobuf_commandObject {
    int32_t command;
/* @@protoc_insertion_point(struct:DarkRoomProtobuf_commandObject) */
} DarkRoomProtobuf_commandObject;

typedef struct _DarkRoomProtobuf_configObject {
    uint32_t ip;
    int32_t logging_port;
    int32_t sensor_port;
    int32_t imu_port;
/* @@protoc_insertion_point(struct:DarkRoomProtobuf_configObject) */
} DarkRoomProtobuf_configObject;

typedef struct _DarkRoomProtobuf_imuObject {
    int32_t id;
    pb_size_t quaternion_count;
    float quaternion[4];
    pb_size_t acc_count;
    int32_t acc[3];
    pb_size_t gravity_count;
    float gravity[3];
/* @@protoc_insertion_point(struct:DarkRoomProtobuf_imuObject) */
} DarkRoomProtobuf_imuObject;

typedef struct _DarkRoomProtobuf_loggingObject {
    bool has_message;
    char message[40];
/* @@protoc_insertion_point(struct:DarkRoomProtobuf_loggingObject) */
} DarkRoomProtobuf_loggingObject;

typedef struct _DarkRoomProtobuf_trackedObjectConfig {
    uint32_t ip;
    int32_t command_port;
/* @@protoc_insertion_point(struct:DarkRoomProtobuf_trackedObjectConfig) */
} DarkRoomProtobuf_trackedObjectConfig;

/* Default values for struct fields */

/* Initializer values for message structs */
#define DarkRoomProtobuf_configObject_init_default {0, 0, 0, 0}
#define DarkRoomProtobuf_trackedObjectConfig_init_default {0, 0}
#define DarkRoomProtobuf_loggingObject_init_default {false, ""}
#define DarkRoomProtobuf_commandObject_init_default {0}
#define DarkRoomProtobuf_imuObject_init_default  {0, 0, {0, 0, 0, 0}, 0, {0, 0, 0}, 0, {0, 0, 0}}
#define DarkRoomProtobuf_configObject_init_zero  {0, 0, 0, 0}
#define DarkRoomProtobuf_trackedObjectConfig_init_zero {0, 0}
#define DarkRoomProtobuf_loggingObject_init_zero {false, ""}
#define DarkRoomProtobuf_commandObject_init_zero {0}
#define DarkRoomProtobuf_imuObject_init_zero     {0, 0, {0, 0, 0, 0}, 0, {0, 0, 0}, 0, {0, 0, 0}}

/* Field tags (for use in manual encoding/decoding) */
#define DarkRoomProtobuf_commandObject_command_tag 1
#define DarkRoomProtobuf_configObject_ip_tag     1
#define DarkRoomProtobuf_configObject_logging_port_tag 2
#define DarkRoomProtobuf_configObject_sensor_port_tag 3
#define DarkRoomProtobuf_configObject_imu_port_tag 4
#define DarkRoomProtobuf_imuObject_id_tag        1
#define DarkRoomProtobuf_imuObject_quaternion_tag 2
#define DarkRoomProtobuf_imuObject_acc_tag       3
#define DarkRoomProtobuf_imuObject_gravity_tag   4
#define DarkRoomProtobuf_loggingObject_message_tag 1
#define DarkRoomProtobuf_trackedObjectConfig_ip_tag 1
#define DarkRoomProtobuf_trackedObjectConfig_command_port_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t DarkRoomProtobuf_configObject_fields[5];
extern const pb_field_t DarkRoomProtobuf_trackedObjectConfig_fields[3];
extern const pb_field_t DarkRoomProtobuf_loggingObject_fields[2];
extern const pb_field_t DarkRoomProtobuf_commandObject_fields[2];
extern const pb_field_t DarkRoomProtobuf_imuObject_fields[5];

/* Maximum encoded size of messages (where known) */
#define DarkRoomProtobuf_configObject_size       39
#define DarkRoomProtobuf_trackedObjectConfig_size 17
#define DarkRoomProtobuf_loggingObject_size      42
#define DarkRoomProtobuf_commandObject_size      11
#define DarkRoomProtobuf_imuObject_size          79

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define LIGHTHOUSE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
